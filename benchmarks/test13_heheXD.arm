// Tests that forwarding doesn't happen in EX Stage if RegWrite is false and
// read after write is in Db position for the AND/XOR instruction.
// Requires:
// B, ADDI & STUR instructions
// Expected results:
// X3 = 0 (X3 = 2 if forwarded erroneously)


//ADDI: I-type, Reg[Rd] = Reg[Rn] + {'0, Imm12}
//OP         Imm12        Rn    Rd
//3322222222 221111111111 00000 00000
//1098765432 109876543210 98765 43210
//1001000100 Unsigned     0..31 0..31

//B: B-type, PC = PC + SignExtend({Imm26, 2'b00})
//OP     Imm26
//332222 22222211111111110000000000
//109876 54321098765432109876543210
//000101 2's Comp Imm26

//STUR: D-type, Mem[Reg[Rn] + SignExtend(Imm9)] = Reg[Rt]
//OP          Imm9      00 Rn    Rt
//33222222222 211111111 11 00000 00000
//10987654321 098765432 10 98765 43210
//11111000000 2's Comp  00 0..31 0..31

               // MAIN:
1001000100_000000000000_11111_00000    // ADDI X0, X31, #0     // X0 = 0
1001000100_000000000010_11111_00001    // ADDI X1, X31, #2     // X1 = 2
11111000000_000001111_00_11111_00000   // STUR X0, [X31, #15]  // Mem[8] = 15
10001010000_00000_000000_00001_00011   // AND X3, X1, X0       // X3 = X1 & X0 = 2 & 15 = 2 if wrong. 0 if right.
000101_00000000000000000000000000      // HALT:B HALT          // HALT = 0
1001000100_000000000000_11111_11111    // ADDI X31, X31, #0    // Bogus instruction - pipelined CPU may need it.
